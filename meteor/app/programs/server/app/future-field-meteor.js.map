{"version":3,"sources":["meteor://ðŸ’»app/future-field-meteor.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,SAAO,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;AAEjC,UAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;AACrB,WAAO,EAAE,YAAY;AACnB,aAAO,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAC/B;AACD,UAAM,EAAE,YAAU;AAChB,UAAI,MAAM,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;AACpC,UAAI,OAAO,GAAG,EAAE,CAAC;AACjB,UAAG,MAAM,EAAC;AACR,aAAK,IAAI,GAAG,qCAAI,MAAM,CAAC,OAAO,GAAE;AAC9B,cAAI,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AACtC,gBAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,gBAAG,GAAG,KAAK,MAAM,EAAC;AAChB,kBAAI,GAAG,GAAG;AACR,sBAAM,EAAC,GAAG;AACV,uBAAO,EAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;AAC3B,2BAAW,EAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;eAC7C;AACD,qBAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnB;WACF;SACF;AACD,eAAO,OAAO,CAAC;OAChB;KACF;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACpB,kBAAc,EAAE,YAAY;;AAE1B,aAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;KACpD;GACF,CAAC,CAAC;CACJ;;AAED,YAAY,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;;AAErD,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAM,CAAC,OAAO,CAAC,YAAY;AACzB,gBAAY,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,YAAY,CAAC,EAAE,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,EAAC,MAAM,EAAC,CAAC,CAAC;;GAEvG,CAAC,CAAC;CACJ,wE","file":"/future-field-meteor.js","sourcesContent":["if (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('counter', 0);\n\n  Template.hello.helpers({\n    counter: function () {\n      return Session.get('counter');\n    },\n    signal: function(){\n      var sample = MyCollection.findOne();\n      var signals = [];\n      if(sample){\n        for (var key in sample.message) {\n          if (sample.message.hasOwnProperty(key)) {\n            var value = sample.message[key];\n            if(key !== \"time\"){\n              var obj = {\n                \"name\":key,\n                \"value\":sample.message[key],\n                \"timestamp\":new Date(sample.message[\"time\"])\n              }\n              signals.push(obj);\n            }\n          }\n        }\n        return signals;\n      }\n    }\n  });\n\n  Template.hello.events({\n    'click button': function () {\n      // increment the counter when button is clicked\n      Session.set('counter', Session.get('counter') + 1);\n    }\n  });\n}\n\nMyCollection = new Mongo.Collection(\"my-collection\");\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    MyCollection.mqttConnect(\"mqtt://127.0.0.1\", [\"/mbus/data\"], {\"username\":\"marcus\",\"password\":\"test\"});\n    // code to run on server at startup\n  });\n}\n"]}