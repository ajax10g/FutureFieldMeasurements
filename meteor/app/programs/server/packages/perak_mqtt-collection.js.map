{"version":3,"sources":["meteor://ðŸ’»app/packages/perak_mqtt-collection/packages/perak_mqtt-collection.js"],"names":[],"mappingsfile":"/packages/perak_mqtt-collection.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// packages/perak:mqtt-collection/lib/mqtt.js                                                    //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\nmqtt = Npm.require('mqtt');                                                                      // 1\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// packages/perak:mqtt-collection/lib/mqtt_collection.js                                         //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\nvar Fiber = Npm.require(\"fibers\");                                                               // 1\n                                                                                                 // 2\nvar Mongo = Package.mongo.Mongo;                                                                 // 3\n                                                                                                 // 4\nMongo.Collection.prototype.mqttConnect = function(uri, topics, options) {                        // 5\n\tvar self = this;                                                                                // 6\n\tthis.mqttDisconnect();                                                                          // 7\n                                                                                                 // 8\n\tthis.options = options || {};                                                                   // 9\n                                                                                                 // 10\n\tthis._mqttClient = mqtt.connect(uri);                                                           // 11\n                                                                                                 // 12\n\tthis._mqttClient.on(\"connect\", function() {                                                     // 13\n\t\tself.mqttSubscribe(topics);                                                                    // 14\n\t});                                                                                             // 15\n                                                                                                 // 16\n\tthis._mqttClient.on(\"message\", function(topic, message) {                                       // 17\n\t\tvar msg = message.toString();                                                                  // 18\n\t\tif(!self.options.raw) {                                                                        // 19\n\t\t\ttry {                                                                                         // 20\n\t\t\t\tmsg = JSON.parse(msg);                                                                       // 21\n\t\t\t} catch(e) {                                                                                  // 22\n\t\t\t}                                                                                             // 23\n\t\t}                                                                                              // 24\n                                                                                                 // 25\n\t\tFiber(function() {                                                                             // 26\n                                                                                                 // 27\n\t\t\tif(self.options.insert) {                                                                     // 28\n\t\t\t\tself.insert({                                                                                // 29\n\t\t\t\t\ttopic: topic,                                                                               // 30\n\t\t\t\t\tmessage: msg                                                                                // 31\n\t\t\t\t}, function(e, r) {                                                                          // 32\n\t\t\t\t\tif(e) {                                                                                     // 33\n\t\t\t\t\t\tconsole.log(e);                                                                            // 34\n\t\t\t\t\t} else {                                                                                    // 35\n\t\t\t\t\t\tif(self.options.insertLimit) {                                                             // 36\n\t\t\t\t\t\t\tvar insertLimit = parseInt(self.options.insertLimit);                                     // 37\n\t\t\t\t\t\t\tif(!isNaN(insertLimit)) {                                                                 // 38\n\t\t\t\t\t\t\t\twhile(self.find({ topic: topic }).count() > insertLimit) {                               // 39\n\t\t\t\t\t\t\t\t\tvar removeId = self.findOne({ topic: topic }, { sort: [[\"createdAt\", \"asc\"]] });        // 40\n\t\t\t\t\t\t\t\t\tif(removeId) {                                                                          // 41\n\t\t\t\t\t\t\t\t\t\tself.remove({ _id: removeId._id });                                                    // 42\n\t\t\t\t\t\t\t\t\t}                                                                                       // 43\n\t\t\t\t\t\t\t\t}                                                                                        // 44\n\t\t\t\t\t\t\t}                                                                                         // 45\n\t\t\t\t\t\t}                                                                                          // 46\n\t\t\t\t\t}                                                                                           // 47\n\t\t\t\t});                                                                                          // 48\n\t\t\t} else {                                                                                      // 49\n\t\t\t\tself.upsert(                                                                                 // 50\n\t\t\t\t{                                                                                            // 51\n\t\t\t\t\ttopic: topic                                                                                // 52\n\t\t\t\t},                                                                                           // 53\n\t\t\t\t{                                                                                            // 54\n\t\t\t\t\t$set: {                                                                                     // 55\n\t\t\t\t\t\ttopic: topic,                                                                              // 56\n\t\t\t\t\t\tmessage: msg                                                                               // 57\n\t\t\t\t\t}                                                                                           // 58\n\t\t\t\t},                                                                                           // 59\n\t\t\t\t{                                                                                            // 60\n\t\t\t\t},                                                                                           // 61\n\t\t\t\tfunction(e, r) {                                                                             // 62\n\t\t\t\t\tif(e) console.log(e);                                                                       // 63\n\t\t\t\t});                                                                                          // 64\n\t\t\t}                                                                                             // 65\n\t\t}).run();                                                                                      // 66\n\t});                                                                                             // 67\n                                                                                                 // 68\n\tvar init = true;                                                                                // 69\n\tthis.find().observeChanges({                                                                    // 70\n\t\tadded: function(id, doc) {                                                                     // 71\n\t\t\tif(!init) {                                                                                   // 72\n\t\t\t\tif(doc && doc.topic && doc.message && doc.broadcast && self._mqttClient) {                   // 73\n\t\t\t\t\tvar msg = typeof doc.message === 'object' ? JSON.stringify(doc.message) : doc.message + \"\"; // 74\n\t\t\t\t\tself.remove({ _id: id });                                                                   // 75\n\t\t\t\t\tself._mqttClient.publish(doc.topic, msg);                                                   // 76\n\t\t\t\t}                                                                                            // 77\n\t\t\t}                                                                                             // 78\n\t\t}                                                                                              // 79\n\t});                                                                                             // 80\n\tinit = false;                                                                                   // 81\n};                                                                                               // 82\n                                                                                                 // 83\nMongo.Collection.prototype.mqttDisconnect = function() {                                         // 84\n\tif(this._mqttClient) this._mqttClient.end();                                                    // 85\n\tthis._mqttClient = null;                                                                        // 86\n};                                                                                               // 87\n                                                                                                 // 88\nMongo.Collection.prototype.mqttSubscribe = function(topics) {                                    // 89\n\tvar self = this;                                                                                // 90\n\tif(!this._mqttClient) return;                                                                   // 91\n\tif(!topics) return;                                                                             // 92\n                                                                                                 // 93\n\tif(typeof topics == \"string\" || topics instanceof String) {                                     // 94\n\t\tthis._mqttClient.subscribe(topics);                                                            // 95\n\t} else if(_.isArray(topics)) {                                                                  // 96\n\t\t_.each(topics, function(topic) {                                                               // 97\n\t\t\tself._mqttClient.subscribe(topic);                                                            // 98\n\t\t});                                                                                            // 99\n\t}                                                                                               // 100\n};                                                                                               // 101\n                                                                                                 // 102\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}